name: Run linter
description: "Run a linter on all changed files"
inputs:
  lint_program_with_args:
    description: "Which program to run"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup CMake
      uses: ./.github/actions/cmake
      env:
        CC: clang-18
        CXX: clang++-18
      with:
        use_qt6: ON
        modules: qtserialport qtwebsockets qtnetworkauth
        additional_cmake_args: -DCMAKE_GLOBAL_AUTOGEN_TARGET=ON -DCMAKE_AUTOGEN_ORIGIN_DEPENDS=OFF

    # https://bugs.launchpad.net/ubuntu/+source/clazy/+bug/2086665/comments/4
    - name: Workaround for clazy
      shell: bash
      run: |
        sudo apt-get remove gcc-14
        sudo apt-get autoremove

    - uses: mjp41/workaround8649@c8550b715ccdc17f89c8d5c28d7a48eeff9c94a8
      if: runner.os == 'Linux'
      with:
        os: ubuntu-24.04

    - name: Install ctcache
      uses: syyyr/clang-tidy-cache-action@v1.0.0

    - name: Build autogenerated stuff
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: cmake --build "$GITHUB_WORKSPACE/build" --parallel "$(nproc)" --target autogen

    - name: Mark generated files as system
      shell: bash
      run: sed -i "s@-I$(pwd)/build@-isystem $(pwd)/build@" build/compile_commands.json

    - name: Run the linter
      shell: bash
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: |
        readarray -t FILES < <(find "$GITHUB_WORKSPACE" -name \*.cpp | grep -v 3rdparty/ | grep -v build/ | grep -v emsdk-cache/)
        printf '%s\n' "${FILES[@]}" | parallel --verbose --jobs "$(nproc)" --plus _=[{#}/{##}] ${{inputs.lint_program_with_args}} {}
