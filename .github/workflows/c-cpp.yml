
name: Build
on:
  push:
    branches: [ shv2-win ]
  pull_request:
    branches: [ shv2-win ]

jobs:

  build_windows:
    runs-on: windows-2019
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Cache Libs
      id: cache-libs
      uses: actions/cache@v4
      with:
        path: |
          C:/msys64/mingw64/bin/libiconv-2.dll
          C:/msys64/mingw64/bin/libintl-8.dll
          C:/msys64/mingw64/bin/libxml2-2.dll
          C:/msys64/mingw64/bin/liblzma-5.dll
          C:/msys64/mingw64/bin/zlib1.dll
        key: ${{ runner.os }}-Libraries

 
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: false
        version: '5.15.0'
        host: 'windows'
        arch: 'win64_mingw81' 

    - name: Build
      run: |
        qmake.exe shvspy.pro -spec win32-g++ "CONFIG+=release"
        mingw32-make.exe qmake_all
        mingw32-make.exe -j4
      shell: cmd

    - name: Install language files
      run: |
        TRANS_DIR=bin/translations
        mkdir -p $TRANS_DIR
        for tsfile in `find . -name "*.ts"` ; do
          qmfile=`basename "${tsfile%.*}.qm"`
          echo "$QT_DIR/bin/lrelease $tsfile -qm $TRANS_DIR/$qmfile"
          $Qt5_Dir/bin/lrelease $tsfile -qm $TRANS_DIR/$qmfile
        done

    - name: Get app version
      run: echo "VERSION=`grep APP_VERSION shvspy/src/appversion.h | cut -d\\" -f2`" >> $GITHUB_ENV

    - name: Create installer
      run: |
        choco upgrade innosetup --no-progress
        "C:\Program Files (x86)\Inno Setup 6\iscc.exe" "/DVERSION=%VERSION%" "/DQT_DIR=%Qt5_Dir%"  shvspy/shvspy.iss
      shell: cmd

    - name: Save setup
      uses: actions/upload-artifact@v4
      with:
        name: shvspy-elektroline-${{ env.VERSION }}-setup.exe
        path: _inno\shvspy\shvspy-elektroline-${{ env.VERSION }}-setup.exe
